
1. 本地内容更改了，但是没执行 git add
红色图标 local uncommitted changes, not checked in to index
        本地未提交的更改，未签入索引

2. 执行了add，没执行commit
绿色图标 local changes checked in to index but not commited
        检入索引但未提交的本地更改

3. 执行了commit
黄色图标 master "提交注释"

           0          |   1    |     --add-->    |   2    |       --commit-->      |   3
还原 <--git checkout-- | 工作区 | <--reset HEAD-- | 暂存区 | <--reset "commit_id"-- | 本地版本库

git checkout其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”
-----------------------------------------

一、创建一个空目录
mkdir learngit
cd learngit
pwd

pwd 用于显示当前路径
ls 显示当前目录下的文件

二、把目录变成git仓库
git init

三、
git add <file[ file]...>  // 文件添加到暂存区
git commit -m "提交说明"  // 暂存区文件提交到远程

git status  // 查看结果
git diff <file> // 查看不同
git log // 显示所有提交过的版本信息
git log --pretty=oneline // 只会显示版本号和提交时的备注信息

git reset --hard HEAD^ //  （或：HEAD~1）工作区	内容退回到上一版本，远程内容不变。 其实只是移到了指向HEAD的指针
git reset --hard <commit_id> // 工作区内容退回到指定版本，远程内容不变

git reflog //显示所有分支的所有操作记录（包括已经被删除的 commit 记录和 reset 的操作）

四、撤消修改
（一）、未使用 git add 到暂存区，撤消修改
1. 撤消修改
  git checkout -- <file> // 撤销修改，回到上一版本，或回到添加进暂存区之后的状态。不加-- 表示切换分支
  git checkout .   //撤销全部文件或文件夹的修改

2. 撤消新增，就是删除文件
  rm -rf filname   //  单个文件/文件夹
  git clean -xdf  // 删除所有新增文件（如果文件已经已经 git add 到暂存区，并不会删除）
  git clean -xdff // 删除所有新增文件和文件夹 （如果文件已经已经 git add 到暂存区，并不会删除）
  
（二）、已经 git add 到暂存区，撤消修改
1. git reset HEAD filename  // 撤消单个文件。文件内容不变，只是撤消git add命令
2. git reset HEAD .  // 撤消所有文件

（三）、 已经 commit 到本地仓库，未push到远程，撤消commit命令，本地修改不变
git reset commit_id  

（四）、已经 commit 到本地仓库，未push到远程，撤消本地修改，工作区和暂存区都撤消。
              其实只移动了指针，只要未关闭git窗口并记住本次的commit_id，可以再移动回来
git reset --hard <commit_id> // 工作区内容退回到指定版本，远程内容不变

----------------------------------
一、先有本地，再有远程，本地关联远程
远程仓库地址 https://github.com/wu-ben/learngit.git
1. 关联远程仓库
git remote add origin git@github.com:wu-ben/learngit.git

2. 本地推送到远程
git push -u origin master
  // 第一次推送，加上-u，表示把本地master推送到远程，同时关联起来，以后推送不需要加-u

第一次clone 或 push 会警告：
  这是因为Git使用SSH连接，而SSH连接在第一次验证GitHub服务器的Key时，需要你确认GitHub的Key的指纹信息是否真的来自GitHub的服务器，输入yes回车即可。
  Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了

二、先建远程，再关联本地
1. git clone git@github.com:wu-ben/learngit.git

三、创建分支
1. git checkout -b dev
  加上-b表示创建并切换，相当于以下两条命令
   git branch dev
   git checkout dev